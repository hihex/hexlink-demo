import com.android.build.gradle.tasks.PackageApplication

apply plugin: 'com.android.application'

repositories {
    maven {
        url 'http://dev.hihex.com/maven'
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId 'hihex.sbrc_samples.hello_libgdx'
        minSdkVersion 16
        targetSdkVersion 19
        versionCode 1
        versionName '1.0'
    }
}

configurations {
    natives
}

dependencies {
    compile 'hihex.sbrc:sbrc:1.6.2@aar'

    // These are libgdx dependencies. It is a bit different from the result of running `gdx-setup.jar` since we are
    // targeting Android only here... Well what is important is just the `sbrc` dependency above and the Java source
    // code ^_^.
    compile 'com.badlogicgames.gdx:gdx:1.6.3'
    compile 'com.badlogicgames.gdx:gdx-backend-android:1.6.3'
    natives 'com.badlogicgames.gdx:gdx-platform:1.6.3:natives-armeabi'
    natives 'com.badlogicgames.gdx:gdx-platform:1.6.3:natives-armeabi-v7a'
    natives 'com.badlogicgames.gdx:gdx-platform:1.6.3:natives-x86'
}

tasks.withType(PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(projectDir, 'libs'))
}

task copyAndroidNatives() {
    file('libs/armeabi/').mkdirs();
    file('libs/armeabi-v7a/').mkdirs();
    file('libs/x86/').mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith('natives-armeabi-v7a.jar')) outputDir = file('libs/armeabi-v7a')
        if (jar.name.endsWith('natives-armeabi.jar')) outputDir = file('libs/armeabi')
        if (jar.name.endsWith('natives-x86.jar')) outputDir = file('libs/x86')
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include '*.so'
            }
        }
    }
}


